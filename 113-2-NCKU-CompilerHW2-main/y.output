Terminals unused in grammar

    MUT
    TRUE
    FALSE
    GEQ
    LEQ
    EQL
    NEQ
    LOR
    LAND
    ADD_ASSIGN
    SUB_ASSIGN
    MUL_ASSIGN
    DIV_ASSIGN
    REM_ASSIGN
    IF
    ELSE
    FOR
    WHILE
    LOOP
    PRINT
    RETURN
    BREAK
    ARROW
    AS
    IN
    DOTDOT
    RSHIFT
    LSHIFT
    IDENT


State 2 conflicts: 4 shift/reduce
State 8 conflicts: 4 shift/reduce
State 16 conflicts: 1 reduce/reduce
State 63 conflicts: 1 shift/reduce
State 64 conflicts: 1 shift/reduce
State 66 conflicts: 4 shift/reduce
State 67 conflicts: 5 shift/reduce


Grammar

    0 $accept: Program $end

    1 $@1: ε

    2 Program: $@1 GlobalStatementList OPTIONAL_NEWLINE

    3 GlobalStatementList: GlobalStatementList GlobalStatement
    4                    | GlobalStatement

    5 GlobalStatement: FunctionDeclStmt
    6                | OPTIONAL_NEWLINE

    7 $@2: ε

    8 $@3: ε

    9 $@4: ε

   10 FunctionDeclStmt: FUNC $@2 ID $@3 '(' ')' $@4 '{' OPTIONAL_NEWLINE GlobalStatementList '}'

   11 $@5: ε

   12 FunctionDeclStmt: PRINTLN '(' '"' STRING_LIT '"' ')' $@5 ';' OPTIONAL_NEWLINE

   13 $@6: ε

   14 FunctionDeclStmt: LET ID $@6 ':' Type '=' DATA ';'
   15                 | PRINTLN '(' Expr ')' ';'

   16 Expr: Expr '+' Term
   17     | Expr '-' Term
   18     | Term

   19 Term: Term '*' Factor
   20     | Term '/' Factor
   21     | Term '%' Factor
   22     | Factor

   23 Factor: '(' Expr ')'
   24       | '-' Factor
   25       | ID
   26       | INT_LIT
   27       | FLOAT_LIT

   28 Type: INT
   29     | FLOAT
   30     | BOOL
   31     | STR

   32 OPTIONAL_NEWLINE: NEWLINE
   33                 | ε

   34 DATA: INT_LIT
   35     | FLOAT_LIT
   36     | STRING_LIT


Terminals, with rules where they appear

    $end (0) 0
    '"' (34) 12
    '%' (37) 21
    '(' (40) 10 12 15 23
    ')' (41) 10 12 15 23
    '*' (42) 19
    '+' (43) 16
    '-' (45) 17 24
    '/' (47) 20
    ':' (58) 14
    ';' (59) 12 14 15
    '=' (61) 14
    '{' (123) 10
    '}' (125) 10
    error (256)
    LET (258) 14
    MUT (259)
    NEWLINE (260) 32
    INT (261) 28
    FLOAT (262) 29
    BOOL (263) 30
    STR (264) 31
    TRUE (265)
    FALSE (266)
    GEQ (267)
    LEQ (268)
    EQL (269)
    NEQ (270)
    LOR (271)
    LAND (272)
    ADD_ASSIGN (273)
    SUB_ASSIGN (274)
    MUL_ASSIGN (275)
    DIV_ASSIGN (276)
    REM_ASSIGN (277)
    IF (278)
    ELSE (279)
    FOR (280)
    WHILE (281)
    LOOP (282)
    PRINT (283)
    PRINTLN (284) 12 15
    FUNC (285) 10
    RETURN (286)
    BREAK (287)
    ID (288) 10 14 25
    ARROW (289)
    AS (290)
    IN (291)
    DOTDOT (292)
    RSHIFT (293)
    LSHIFT (294)
    INT_LIT <i_val> (295) 26 34
    FLOAT_LIT <f_val> (296) 27 35
    STRING_LIT <s_val> (297) 12 36
    IDENT <s_val> (298)


Nonterminals, with rules where they appear

    $accept (57)
        on left: 0
    Program (58)
        on left: 2
        on right: 0
    $@1 (59)
        on left: 1
        on right: 2
    GlobalStatementList (60)
        on left: 3 4
        on right: 2 3 10
    GlobalStatement (61)
        on left: 5 6
        on right: 3 4
    FunctionDeclStmt (62)
        on left: 10 12 14 15
        on right: 5
    $@2 (63)
        on left: 7
        on right: 10
    $@3 (64)
        on left: 8
        on right: 10
    $@4 (65)
        on left: 9
        on right: 10
    $@5 (66)
        on left: 11
        on right: 12
    $@6 (67)
        on left: 13
        on right: 14
    Expr (68)
        on left: 16 17 18
        on right: 15 16 17 23
    Term (69)
        on left: 19 20 21 22
        on right: 16 17 18 19 20 21
    Factor (70)
        on left: 23 24 25 26 27
        on right: 19 20 21 22 24
    Type <s_val> (71)
        on left: 28 29 30 31
        on right: 14
    OPTIONAL_NEWLINE (72)
        on left: 32 33
        on right: 2 6 10 12
    DATA (73)
        on left: 34 35 36
        on right: 14


State 0

    0 $accept: • Program $end

    $default  reduce using rule 1 ($@1)

    Program  go to state 1
    $@1      go to state 2


State 1

    0 $accept: Program • $end

    $end  shift, and go to state 3


State 2

    2 Program: $@1 • GlobalStatementList OPTIONAL_NEWLINE

    LET      shift, and go to state 4
    NEWLINE  shift, and go to state 5
    PRINTLN  shift, and go to state 6
    FUNC     shift, and go to state 7

    LET       [reduce using rule 33 (OPTIONAL_NEWLINE)]
    NEWLINE   [reduce using rule 33 (OPTIONAL_NEWLINE)]
    PRINTLN   [reduce using rule 33 (OPTIONAL_NEWLINE)]
    FUNC      [reduce using rule 33 (OPTIONAL_NEWLINE)]
    $default  reduce using rule 33 (OPTIONAL_NEWLINE)

    GlobalStatementList  go to state 8
    GlobalStatement      go to state 9
    FunctionDeclStmt     go to state 10
    OPTIONAL_NEWLINE     go to state 11


State 3

    0 $accept: Program $end •

    $default  accept


State 4

   14 FunctionDeclStmt: LET • ID $@6 ':' Type '=' DATA ';'

    ID  shift, and go to state 12


State 5

   32 OPTIONAL_NEWLINE: NEWLINE •

    $default  reduce using rule 32 (OPTIONAL_NEWLINE)


State 6

   12 FunctionDeclStmt: PRINTLN • '(' '"' STRING_LIT '"' ')' $@5 ';' OPTIONAL_NEWLINE
   15                 | PRINTLN • '(' Expr ')' ';'

    '('  shift, and go to state 13


State 7

   10 FunctionDeclStmt: FUNC • $@2 ID $@3 '(' ')' $@4 '{' OPTIONAL_NEWLINE GlobalStatementList '}'

    $default  reduce using rule 7 ($@2)

    $@2  go to state 14


State 8

    2 Program: $@1 GlobalStatementList • OPTIONAL_NEWLINE
    3 GlobalStatementList: GlobalStatementList • GlobalStatement

    LET      shift, and go to state 4
    NEWLINE  shift, and go to state 5
    PRINTLN  shift, and go to state 6
    FUNC     shift, and go to state 7

    LET       [reduce using rule 33 (OPTIONAL_NEWLINE)]
    NEWLINE   [reduce using rule 33 (OPTIONAL_NEWLINE)]
    PRINTLN   [reduce using rule 33 (OPTIONAL_NEWLINE)]
    FUNC      [reduce using rule 33 (OPTIONAL_NEWLINE)]
    $default  reduce using rule 33 (OPTIONAL_NEWLINE)

    GlobalStatement   go to state 15
    FunctionDeclStmt  go to state 10
    OPTIONAL_NEWLINE  go to state 16


State 9

    4 GlobalStatementList: GlobalStatement •

    $default  reduce using rule 4 (GlobalStatementList)


State 10

    5 GlobalStatement: FunctionDeclStmt •

    $default  reduce using rule 5 (GlobalStatement)


State 11

    6 GlobalStatement: OPTIONAL_NEWLINE •

    $default  reduce using rule 6 (GlobalStatement)


State 12

   14 FunctionDeclStmt: LET ID • $@6 ':' Type '=' DATA ';'

    $default  reduce using rule 13 ($@6)

    $@6  go to state 17


State 13

   12 FunctionDeclStmt: PRINTLN '(' • '"' STRING_LIT '"' ')' $@5 ';' OPTIONAL_NEWLINE
   15                 | PRINTLN '(' • Expr ')' ';'

    ID         shift, and go to state 18
    INT_LIT    shift, and go to state 19
    FLOAT_LIT  shift, and go to state 20
    '('        shift, and go to state 21
    '"'        shift, and go to state 22
    '-'        shift, and go to state 23

    Expr    go to state 24
    Term    go to state 25
    Factor  go to state 26


State 14

   10 FunctionDeclStmt: FUNC $@2 • ID $@3 '(' ')' $@4 '{' OPTIONAL_NEWLINE GlobalStatementList '}'

    ID  shift, and go to state 27


State 15

    3 GlobalStatementList: GlobalStatementList GlobalStatement •

    $default  reduce using rule 3 (GlobalStatementList)


State 16

    2 Program: $@1 GlobalStatementList OPTIONAL_NEWLINE •
    6 GlobalStatement: OPTIONAL_NEWLINE •

    $end      reduce using rule 2 (Program)
    $end      [reduce using rule 6 (GlobalStatement)]
    $default  reduce using rule 6 (GlobalStatement)


State 17

   14 FunctionDeclStmt: LET ID $@6 • ':' Type '=' DATA ';'

    ':'  shift, and go to state 28


State 18

   25 Factor: ID •

    $default  reduce using rule 25 (Factor)


State 19

   26 Factor: INT_LIT •

    $default  reduce using rule 26 (Factor)


State 20

   27 Factor: FLOAT_LIT •

    $default  reduce using rule 27 (Factor)


State 21

   23 Factor: '(' • Expr ')'

    ID         shift, and go to state 18
    INT_LIT    shift, and go to state 19
    FLOAT_LIT  shift, and go to state 20
    '('        shift, and go to state 21
    '-'        shift, and go to state 23

    Expr    go to state 29
    Term    go to state 25
    Factor  go to state 26


State 22

   12 FunctionDeclStmt: PRINTLN '(' '"' • STRING_LIT '"' ')' $@5 ';' OPTIONAL_NEWLINE

    STRING_LIT  shift, and go to state 30


State 23

   24 Factor: '-' • Factor

    ID         shift, and go to state 18
    INT_LIT    shift, and go to state 19
    FLOAT_LIT  shift, and go to state 20
    '('        shift, and go to state 21
    '-'        shift, and go to state 23

    Factor  go to state 31


State 24

   15 FunctionDeclStmt: PRINTLN '(' Expr • ')' ';'
   16 Expr: Expr • '+' Term
   17     | Expr • '-' Term

    ')'  shift, and go to state 32
    '+'  shift, and go to state 33
    '-'  shift, and go to state 34


State 25

   18 Expr: Term •
   19 Term: Term • '*' Factor
   20     | Term • '/' Factor
   21     | Term • '%' Factor

    '*'  shift, and go to state 35
    '/'  shift, and go to state 36
    '%'  shift, and go to state 37

    $default  reduce using rule 18 (Expr)


State 26

   22 Term: Factor •

    $default  reduce using rule 22 (Term)


State 27

   10 FunctionDeclStmt: FUNC $@2 ID • $@3 '(' ')' $@4 '{' OPTIONAL_NEWLINE GlobalStatementList '}'

    $default  reduce using rule 8 ($@3)

    $@3  go to state 38


State 28

   14 FunctionDeclStmt: LET ID $@6 ':' • Type '=' DATA ';'

    INT    shift, and go to state 39
    FLOAT  shift, and go to state 40
    BOOL   shift, and go to state 41
    STR    shift, and go to state 42

    Type  go to state 43


State 29

   16 Expr: Expr • '+' Term
   17     | Expr • '-' Term
   23 Factor: '(' Expr • ')'

    ')'  shift, and go to state 44
    '+'  shift, and go to state 33
    '-'  shift, and go to state 34


State 30

   12 FunctionDeclStmt: PRINTLN '(' '"' STRING_LIT • '"' ')' $@5 ';' OPTIONAL_NEWLINE

    '"'  shift, and go to state 45


State 31

   24 Factor: '-' Factor •

    $default  reduce using rule 24 (Factor)


State 32

   15 FunctionDeclStmt: PRINTLN '(' Expr ')' • ';'

    ';'  shift, and go to state 46


State 33

   16 Expr: Expr '+' • Term

    ID         shift, and go to state 18
    INT_LIT    shift, and go to state 19
    FLOAT_LIT  shift, and go to state 20
    '('        shift, and go to state 21
    '-'        shift, and go to state 23

    Term    go to state 47
    Factor  go to state 26


State 34

   17 Expr: Expr '-' • Term

    ID         shift, and go to state 18
    INT_LIT    shift, and go to state 19
    FLOAT_LIT  shift, and go to state 20
    '('        shift, and go to state 21
    '-'        shift, and go to state 23

    Term    go to state 48
    Factor  go to state 26


State 35

   19 Term: Term '*' • Factor

    ID         shift, and go to state 18
    INT_LIT    shift, and go to state 19
    FLOAT_LIT  shift, and go to state 20
    '('        shift, and go to state 21
    '-'        shift, and go to state 23

    Factor  go to state 49


State 36

   20 Term: Term '/' • Factor

    ID         shift, and go to state 18
    INT_LIT    shift, and go to state 19
    FLOAT_LIT  shift, and go to state 20
    '('        shift, and go to state 21
    '-'        shift, and go to state 23

    Factor  go to state 50


State 37

   21 Term: Term '%' • Factor

    ID         shift, and go to state 18
    INT_LIT    shift, and go to state 19
    FLOAT_LIT  shift, and go to state 20
    '('        shift, and go to state 21
    '-'        shift, and go to state 23

    Factor  go to state 51


State 38

   10 FunctionDeclStmt: FUNC $@2 ID $@3 • '(' ')' $@4 '{' OPTIONAL_NEWLINE GlobalStatementList '}'

    '('  shift, and go to state 52


State 39

   28 Type: INT •

    $default  reduce using rule 28 (Type)


State 40

   29 Type: FLOAT •

    $default  reduce using rule 29 (Type)


State 41

   30 Type: BOOL •

    $default  reduce using rule 30 (Type)


State 42

   31 Type: STR •

    $default  reduce using rule 31 (Type)


State 43

   14 FunctionDeclStmt: LET ID $@6 ':' Type • '=' DATA ';'

    '='  shift, and go to state 53


State 44

   23 Factor: '(' Expr ')' •

    $default  reduce using rule 23 (Factor)


State 45

   12 FunctionDeclStmt: PRINTLN '(' '"' STRING_LIT '"' • ')' $@5 ';' OPTIONAL_NEWLINE

    ')'  shift, and go to state 54


State 46

   15 FunctionDeclStmt: PRINTLN '(' Expr ')' ';' •

    $default  reduce using rule 15 (FunctionDeclStmt)


State 47

   16 Expr: Expr '+' Term •
   19 Term: Term • '*' Factor
   20     | Term • '/' Factor
   21     | Term • '%' Factor

    '*'  shift, and go to state 35
    '/'  shift, and go to state 36
    '%'  shift, and go to state 37

    $default  reduce using rule 16 (Expr)


State 48

   17 Expr: Expr '-' Term •
   19 Term: Term • '*' Factor
   20     | Term • '/' Factor
   21     | Term • '%' Factor

    '*'  shift, and go to state 35
    '/'  shift, and go to state 36
    '%'  shift, and go to state 37

    $default  reduce using rule 17 (Expr)


State 49

   19 Term: Term '*' Factor •

    $default  reduce using rule 19 (Term)


State 50

   20 Term: Term '/' Factor •

    $default  reduce using rule 20 (Term)


State 51

   21 Term: Term '%' Factor •

    $default  reduce using rule 21 (Term)


State 52

   10 FunctionDeclStmt: FUNC $@2 ID $@3 '(' • ')' $@4 '{' OPTIONAL_NEWLINE GlobalStatementList '}'

    ')'  shift, and go to state 55


State 53

   14 FunctionDeclStmt: LET ID $@6 ':' Type '=' • DATA ';'

    INT_LIT     shift, and go to state 56
    FLOAT_LIT   shift, and go to state 57
    STRING_LIT  shift, and go to state 58

    DATA  go to state 59


State 54

   12 FunctionDeclStmt: PRINTLN '(' '"' STRING_LIT '"' ')' • $@5 ';' OPTIONAL_NEWLINE

    $default  reduce using rule 11 ($@5)

    $@5  go to state 60


State 55

   10 FunctionDeclStmt: FUNC $@2 ID $@3 '(' ')' • $@4 '{' OPTIONAL_NEWLINE GlobalStatementList '}'

    $default  reduce using rule 9 ($@4)

    $@4  go to state 61


State 56

   34 DATA: INT_LIT •

    $default  reduce using rule 34 (DATA)


State 57

   35 DATA: FLOAT_LIT •

    $default  reduce using rule 35 (DATA)


State 58

   36 DATA: STRING_LIT •

    $default  reduce using rule 36 (DATA)


State 59

   14 FunctionDeclStmt: LET ID $@6 ':' Type '=' DATA • ';'

    ';'  shift, and go to state 62


State 60

   12 FunctionDeclStmt: PRINTLN '(' '"' STRING_LIT '"' ')' $@5 • ';' OPTIONAL_NEWLINE

    ';'  shift, and go to state 63


State 61

   10 FunctionDeclStmt: FUNC $@2 ID $@3 '(' ')' $@4 • '{' OPTIONAL_NEWLINE GlobalStatementList '}'

    '{'  shift, and go to state 64


State 62

   14 FunctionDeclStmt: LET ID $@6 ':' Type '=' DATA ';' •

    $default  reduce using rule 14 (FunctionDeclStmt)


State 63

   12 FunctionDeclStmt: PRINTLN '(' '"' STRING_LIT '"' ')' $@5 ';' • OPTIONAL_NEWLINE

    NEWLINE  shift, and go to state 5

    NEWLINE   [reduce using rule 33 (OPTIONAL_NEWLINE)]
    $default  reduce using rule 33 (OPTIONAL_NEWLINE)

    OPTIONAL_NEWLINE  go to state 65


State 64

   10 FunctionDeclStmt: FUNC $@2 ID $@3 '(' ')' $@4 '{' • OPTIONAL_NEWLINE GlobalStatementList '}'

    NEWLINE  shift, and go to state 5

    NEWLINE   [reduce using rule 33 (OPTIONAL_NEWLINE)]
    $default  reduce using rule 33 (OPTIONAL_NEWLINE)

    OPTIONAL_NEWLINE  go to state 66


State 65

   12 FunctionDeclStmt: PRINTLN '(' '"' STRING_LIT '"' ')' $@5 ';' OPTIONAL_NEWLINE •

    $default  reduce using rule 12 (FunctionDeclStmt)


State 66

   10 FunctionDeclStmt: FUNC $@2 ID $@3 '(' ')' $@4 '{' OPTIONAL_NEWLINE • GlobalStatementList '}'

    LET      shift, and go to state 4
    NEWLINE  shift, and go to state 5
    PRINTLN  shift, and go to state 6
    FUNC     shift, and go to state 7

    LET       [reduce using rule 33 (OPTIONAL_NEWLINE)]
    NEWLINE   [reduce using rule 33 (OPTIONAL_NEWLINE)]
    PRINTLN   [reduce using rule 33 (OPTIONAL_NEWLINE)]
    FUNC      [reduce using rule 33 (OPTIONAL_NEWLINE)]
    $default  reduce using rule 33 (OPTIONAL_NEWLINE)

    GlobalStatementList  go to state 67
    GlobalStatement      go to state 9
    FunctionDeclStmt     go to state 10
    OPTIONAL_NEWLINE     go to state 11


State 67

    3 GlobalStatementList: GlobalStatementList • GlobalStatement
   10 FunctionDeclStmt: FUNC $@2 ID $@3 '(' ')' $@4 '{' OPTIONAL_NEWLINE GlobalStatementList • '}'

    LET      shift, and go to state 4
    NEWLINE  shift, and go to state 5
    PRINTLN  shift, and go to state 6
    FUNC     shift, and go to state 7
    '}'      shift, and go to state 68

    LET      [reduce using rule 33 (OPTIONAL_NEWLINE)]
    NEWLINE  [reduce using rule 33 (OPTIONAL_NEWLINE)]
    PRINTLN  [reduce using rule 33 (OPTIONAL_NEWLINE)]
    FUNC     [reduce using rule 33 (OPTIONAL_NEWLINE)]
    '}'      [reduce using rule 33 (OPTIONAL_NEWLINE)]

    GlobalStatement   go to state 15
    FunctionDeclStmt  go to state 10
    OPTIONAL_NEWLINE  go to state 11


State 68

   10 FunctionDeclStmt: FUNC $@2 ID $@3 '(' ')' $@4 '{' OPTIONAL_NEWLINE GlobalStatementList '}' •

    $default  reduce using rule 10 (FunctionDeclStmt)
